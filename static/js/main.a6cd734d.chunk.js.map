{"version":3,"sources":["n1-main/m1-ui/Main/Main.module.css","n2-features/f1-auth/a2-register/Register.module.css","n2-features/f2-error404/Error404.module.css","components/super-components/s1-SuperInputText/SuperInputText.module.css","components/super-components/s2-SuperButton/SuperButton.module.css","components/super-components/s3-SuperCheckbox/SuperCheckbox.module.css","components/super-components/s4-SuperEditableSpan/SuperEditableSpan.module.css","api/api.ts","state/register-reducer.ts","n2-features/f1-auth/a1-login/Login.tsx","n2-features/f1-auth/a2-register/Register.tsx","n2-features/f3-profile/Profile.tsx","n2-features/f2-error404/Error404.tsx","n2-features/f4-password/RestorePassword.tsx","n2-features/f4-password/EnterPassword.tsx","n1-main/m1-ui/Main/Main.tsx","components/super-components/s1-SuperInputText/SuperInputText.tsx","components/super-components/s2-SuperButton/SuperButton.tsx","components/super-components/s3-SuperCheckbox/SuperCheckbox.tsx","components/super-components/s4-SuperEditableSpan/SuperEditableSpan.tsx","components/super-components/s5-SuperSelect/SuperSelect.tsx","components/super-components/s6-SuperRadio/SuperRadio.tsx","n2-features/f0-test/TestPage.tsx","App.tsx","reportWebVitals.ts","state/login-reducer.ts","state/profile-reducer.ts","state/recover-reducer.ts","state/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","authAPI","email","password","post","SET_REGISTER_SUCCESS","CLEAR_REGISTER_STATUS","SET_REGISTER_ERROR","initialState","isRegistrationSuccess","registerError","registrationAC","type","setRegisterErrorAC","error","Login","dispatch","useDispatch","useEffect","Register","isRegisterSuccess","useSelector","state","register","formik","useFormik","initialValues","repeatPassword","validate","values","errors","test","length","onSubmit","then","res","data","catch","err","response","to","LOGIN_PATH","className","s","registerBlock","handleSubmit","inputElement","getFieldProps","onFocus","touched","style","color","Profile","Error404","errorBlock","number","message","cat","RestorePassword","EnterPassword","Main","styles","navBlock","REGISTER_PATH","PROFILE_PATH","RESTORE_PASS_PATH","ENTER_PASS_PATH","TEST_PAGE_PATH","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","id","htmlFor","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","src","width","SuperSelect","options","onChangeOption","mappedOptions","map","opt","i","SuperRadio","name","onChangeCallback","o","TestPage","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","login","action","recover","profile","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6cd734d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBlock\":\"Main_navBlock__1BCuH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerBlock\":\"Register_registerBlock__l65On\",\"inputElement\":\"Register_inputElement__3eS7w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorBlock\":\"Error404_errorBlock__31wTr\",\"number\":\"Error404_number__10AAh\",\"message\":\"Error404_message__3jV4D\",\"cat\":\"Error404_cat__vAScU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3p6xM\",\"errorInput\":\"SuperInputText_errorInput__8MYYn\",\"error\":\"SuperInputText_error__7wOv0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1Zqa-\",\"red\":\"SuperButton_red__1dYOz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__31-MZ\",\"spanClassName\":\"SuperCheckbox_spanClassName__3J3Yc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__3s46N\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\nexport const authAPI = {\r\n    register(email: string, password: string) {\r\n        return instance.post<RegisterResponseType>('auth/register', {email: email, password: password});\r\n    }\r\n};\r\n\r\n//types\r\ntype RegisterResponseType = {\r\n    error?: string\r\n}","import {Dispatch} from \"redux\";\r\nimport {ActionsType} from \"./store\";\r\nimport {authAPI} from \"../api/api\";\r\n\r\nconst SET_REGISTER_SUCCESS = \"register/SET_REGISTER_SUCCESS\";\r\nconst CLEAR_REGISTER_STATUS = \"register/CLEAR_REGISTER_STATUS\";\r\nconst SET_REGISTER_ERROR = \"register/SET_REGISTER_ERROR\";\r\n\r\nconst initialState = {\r\n    isRegistrationSuccess: false,\r\n    registerError: null as null | string\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const registerReducer = (state: InitialStateType = initialState, action: RegisterReducerActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_REGISTER_SUCCESS:\r\n            return {...state, isRegistrationSuccess: true}\r\n        case CLEAR_REGISTER_STATUS:\r\n            return {...state, isRegistrationSuccess: false}\r\n        case SET_REGISTER_ERROR:\r\n            return {...state, registerError: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const registerTC = (email: string, password: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    authAPI.register(email, password)\r\n        .then(res => {\r\n            if (!res.data.error) {\r\n                dispatch(registrationAC());\r\n            }\r\n        })\r\n        .catch(err => {\r\n            dispatch(setRegisterErrorAC(err.response.data.error));\r\n        })\r\n}\r\n\r\nexport const registrationAC = () => ({type: SET_REGISTER_SUCCESS} as const);\r\nexport const clearRegisterStatusAC = () => ({type: CLEAR_REGISTER_STATUS} as const);\r\nexport const setRegisterErrorAC = (error: string | null) => ({type: SET_REGISTER_ERROR, error} as const);\r\n\r\ntype RegistrationActionType = ReturnType<typeof registrationAC>;\r\ntype ClearRegisterStatusActionType = ReturnType<typeof clearRegisterStatusAC>;\r\ntype SetRegisterErrorActionType = ReturnType<typeof setRegisterErrorAC>;\r\n\r\nexport type RegisterReducerActionsType =\r\n    RegistrationActionType |\r\n    ClearRegisterStatusActionType |\r\n    SetRegisterErrorActionType","import React, {useEffect} from \"react\";\r\nimport {clearRegisterStatusAC} from \"../../../state/register-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(clearRegisterStatusAC());\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from \"react\";\r\nimport s from './Register.module.css';\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {registerTC, setRegisterErrorAC} from \"../../../state/register-reducer\";\r\nimport {AppRootStateType} from \"../../../state/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {LOGIN_PATH} from \"../../../App\";\r\n\r\nexport const Register = () => {\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    const dispatch = useDispatch();\r\n    const isRegisterSuccess = useSelector<AppRootStateType, boolean>(state => state.register.isRegistrationSuccess)\r\n    const registerError = useSelector<AppRootStateType, null | string>(state => state.register.registerError)\r\n\r\n    type FormikErrorType = {\r\n        email?: string\r\n        password?: string\r\n        repeatPassword?: string\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            repeatPassword: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email is required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Must be 8 characters or more';\r\n            }\r\n\r\n            if (values.repeatPassword !== values.password) {\r\n                errors.repeatPassword = 'Passwords don\\'t match';\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(registerTC(values.email, values.password));\r\n        }\r\n    })\r\n\r\n    if (isRegisterSuccess) {\r\n        return <Redirect to={LOGIN_PATH}/>\r\n    }\r\n\r\n    const onFocusEmailInput = () => {\r\n        if (registerError) {\r\n            dispatch(setRegisterErrorAC(null));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.registerBlock}>\r\n            <h1>Register</h1>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <span>Email: </span>\r\n                <div className={s.inputElement}>\r\n                    <input type=\"email\" {...formik.getFieldProps('email')} onFocus={onFocusEmailInput}/>\r\n                    {formik.touched.email && formik.errors.email ?\r\n                        <div style={{color: 'red'}}>{formik.errors.email}</div> : null}\r\n                </div>\r\n                <span>Password: </span>\r\n                <div className={s.inputElement}>\r\n                    <input type=\"password\" {...formik.getFieldProps('password')}/>\r\n                    {formik.touched.password && formik.errors.password ?\r\n                        <div style={{color: 'red'}}>{formik.errors.password}</div> : null}\r\n                </div>\r\n                <span>Repeat password: </span>\r\n                <div className={s.inputElement}>\r\n                    <input type=\"password\" {...formik.getFieldProps('repeatPassword')}/>\r\n                    {formik.touched.repeatPassword && formik.errors.repeatPassword ?\r\n                        <div style={{color: 'red'}}>{formik.errors.repeatPassword}</div> : null}\r\n                </div>\r\n                <div>\r\n                    <button type={\"submit\"}>Register</button>\r\n                </div>\r\n                <div style={{color: 'red'}}>\r\n                    {registerError}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const Profile = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Profile</h1>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\nimport s from './Error404.module.css'\n\nfunction Error404() {\n    return (\n        <div className={s.errorBlock}>\n            <div className={s.number}>404</div>\n            <div className={s.message}>Page not found!</div>\n            <div className={s.cat}>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\r\n\r\nexport const RestorePassword = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Restore Password</h1>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const EnterPassword = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Enter Password</h1>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {ENTER_PASS_PATH, LOGIN_PATH, PROFILE_PATH, REGISTER_PATH, RESTORE_PASS_PATH, TEST_PAGE_PATH } from \"../../../App\";\r\nimport styles from './Main.module.css';\r\n\r\nexport const Main = () => {\r\n\r\n    return (\r\n        <div>\r\n            <NavLink className={styles.navBlock} to={LOGIN_PATH}>Login</NavLink>\r\n            <NavLink className={styles.navBlock} to={REGISTER_PATH}>Register</NavLink>\r\n            <NavLink className={styles.navBlock} to={PROFILE_PATH}>Profile</NavLink>\r\n            <NavLink className={styles.navBlock} to={RESTORE_PASS_PATH}>Restore Password</NavLink>\r\n            <NavLink className={styles.navBlock} to={ENTER_PASS_PATH}>Enter Password</NavLink>\r\n            <NavLink className={styles.navBlock} to={TEST_PAGE_PATH}>Test Page</NavLink>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}`; // fixed - need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\n        onChange && onChange(e);\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <div>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n                id={\"supercheckbox\"}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            <label htmlFor={\"supercheckbox\"}>\n                {children && <span className={s.spanClassName}>{children}</span>}\n            </label>\n        </div>\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\nimport s from \"./SuperEditableSpan.module.css\";\nimport SuperInputText from \"../s1-SuperInputText/SuperInputText\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n\n    const onEnterCallback = () => {\n        setEditMode(false); // выключить editMode при нажатии Enter\n\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true); // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    const spanClassName = `${s.editableSpan} ${className}`;\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                        <img src={\"https://image.flaticon.com/icons/png/512/45/45706.png\"} width={\"20px\"}/>\n                    </span>\n\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\nimport './SuperSelect.css';\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: JSX.Element[] | undefined = options?.map((opt, i) =>\n        <option key={i}>{opt}</option>\n    ); // map options with key - done\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e);\n        onChangeOption && onChangeOption(e.currentTarget.value);\n        // onChange, onChangeOption - done\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    );\n}\n\nexport default SuperSelect;\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport './SuperRadio.css';\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        onChangeOption && onChangeOption(e.currentTarget.value);\n        // onChange, onChangeOption - done\n    }\n\n    const mappedOptions: JSX.Element[] = options ? options.map((o, i) => (\n        <div className=\"form_radio\" key={name + \"-\" + i} >\n            <input\n                id={\"hw7-radio\" + i}\n                className={\"radio\"}\n                type={\"radio\"}\n                name={name}\n                checked={i === 0}\n                value={o}\n                onChange={onChangeCallback}\n                // name, checked, value, onChange - done\n            />\n            <label htmlFor={\"hw7-radio\" + i}>\n                <span></span>{o}\n            </label>\n        </div>\n    )) : [];\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    );\n}\n\nexport default SuperRadio;\n","import React from \"react\";\r\nimport SuperInputText from \"../../components/super-components/s1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../components/super-components/s2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../components/super-components/s3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../../components/super-components/s4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../components/super-components/s5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../components/super-components/s6-SuperRadio/SuperRadio\";\r\n\r\nexport const TestPage = () => {\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <SuperInputText value={\"super input text\"}/>\r\n            </div>\r\n            <div>\r\n                <SuperButton>Super Button</SuperButton>\r\n            </div>\r\n            <div>\r\n                <SuperCheckbox/>\r\n            </div>\r\n            <div>\r\n                <SuperEditableSpan value={\"Super Editable Span\"}/>\r\n            </div>\r\n            <div>\r\n                <SuperSelect options={['value 1', 'value 2', 'value 3']}/>\r\n            </div>\r\n            <div>\r\n                <SuperRadio options={['value 1', 'value 2', 'value 3']}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {Route, Switch} from 'react-router-dom';\nimport {Login} from \"./n2-features/f1-auth/a1-login/Login\";\nimport {Register} from \"./n2-features/f1-auth/a2-register/Register\";\nimport {Profile} from \"./n2-features/f3-profile/Profile\";\nimport Error404 from \"./n2-features/f2-error404/Error404\";\nimport {RestorePassword} from \"./n2-features/f4-password/RestorePassword\";\nimport {EnterPassword} from \"./n2-features/f4-password/EnterPassword\";\nimport {Main} from \"./n1-main/m1-ui/Main/Main\";\nimport {TestPage} from \"./n2-features/f0-test/TestPage\";\n\nexport const LOGIN_PATH = \"/login\";\nexport const REGISTER_PATH = \"/register\";\nexport const PROFILE_PATH = \"/profile\";\nexport const RESTORE_PASS_PATH = \"/restore-pass\";\nexport const ENTER_PASS_PATH = \"/enter-pass\";\nexport const TEST_PAGE_PATH = \"/test\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            {/*//hr provider*/}\n            <Main/>\n            <div>\n                {/*<Header/>*/}\n                <Switch>\n                    <Route exact path={\"/\"} render={() => <Profile/>}/>\n                    <Route path={LOGIN_PATH} render={() => <Login/>}/>\n                    <Route path={REGISTER_PATH} render={() => <Register/>}/>\n                    <Route path={PROFILE_PATH} render={() => <Profile/>}/>\n                    <Route path={RESTORE_PASS_PATH} render={() => <RestorePassword/>}/>\n                    <Route path={ENTER_PASS_PATH} render={() => <EnterPassword/>}/>\n                    <Route path={TEST_PAGE_PATH} render={() => <TestPage/>}/>\n                    <Route render={() => <Error404/>}/>\n                </Switch>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: LoginReducerActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type LoginReducerActionsType = {\r\n    type: \"\"\r\n}","const initialState = {\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ProfileReducerActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ProfileReducerActionsType = {\r\n    type: \"\"\r\n}","const initialState = {\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const recoverReducer = (state: InitialStateType = initialState, action: RecoverReducerActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type RecoverReducerActionsType = {\r\n    type: \"\"\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {loginReducer, LoginReducerActionsType} from \"./login-reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {profileReducer, ProfileReducerActionsType} from \"./profile-reducer\";\r\nimport {registerReducer, RegisterReducerActionsType} from \"./register-reducer\";\r\nimport {recoverReducer, RecoverReducerActionsType} from \"./recover-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    recover: recoverReducer,\r\n    profile: profileReducer\r\n})\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type ActionsType =\r\n    LoginReducerActionsType |\r\n    RegisterReducerActionsType |\r\n    RecoverReducerActionsType |\r\n    ProfileReducerActionsType\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport {store} from './state/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}