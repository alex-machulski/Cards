{"version":3,"sources":["n1-main/m1-ui/Main/Main.module.css","n2-features/f2-error404/Error404.module.css","components/super-components/s1-SuperInputText/SuperInputText.module.css","components/super-components/s2-SuperButton/SuperButton.module.css","components/super-components/s3-SuperCheckbox/SuperCheckbox.module.css","components/super-components/s4-SuperEditableSpan/SuperEditableSpan.module.css","n2-features/f1-auth/a1-login/Login.tsx","n2-features/f1-auth/a2-register/Register.tsx","n2-features/f3-profile/Profile.tsx","n2-features/f2-error404/Error404.tsx","n2-features/f4-password/RestorePassword.tsx","n2-features/f4-password/EnterPassword.tsx","n1-main/m1-ui/Main/Main.tsx","components/super-components/s1-SuperInputText/SuperInputText.tsx","components/super-components/s2-SuperButton/SuperButton.tsx","components/super-components/s3-SuperCheckbox/SuperCheckbox.tsx","components/super-components/s4-SuperEditableSpan/SuperEditableSpan.tsx","components/super-components/s5-SuperSelect/SuperSelect.tsx","components/super-components/s6-SuperRadio/SuperRadio.tsx","n2-features/f0-test/TestPage.tsx","App.tsx","reportWebVitals.ts","state/auth-reducer.ts","state/profile-reducer.ts","state/store.ts","index.tsx"],"names":["module","exports","Login","Register","Profile","Error404","className","s","errorBlock","number","message","cat","RestorePassword","EnterPassword","Main","styles","navBlock","to","LOGIN_PATH","REGISTER_PATH","PROFILE_PATH","ERROR_404_PATH","RESTORE_PASS_PATH","ENTER_PASS_PATH","TEST_PAGE_PATH","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","id","htmlFor","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","src","width","SuperSelect","options","onChangeOption","mappedOptions","map","opt","i","SuperRadio","name","onChangeCallback","o","TestPage","App","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","auth","state","action","profile","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec19aa70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBlock\":\"Main_navBlock__1BCuH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorBlock\":\"Error404_errorBlock__31wTr\",\"number\":\"Error404_number__10AAh\",\"message\":\"Error404_message__3jV4D\",\"cat\":\"Error404_cat__vAScU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3p6xM\",\"errorInput\":\"SuperInputText_errorInput__8MYYn\",\"error\":\"SuperInputText_error__7wOv0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1Zqa-\",\"red\":\"SuperButton_red__1dYOz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__31-MZ\",\"spanClassName\":\"SuperCheckbox_spanClassName__3J3Yc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__3s46N\"};","import React from \"react\";\r\n\r\nexport const Login = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const Register = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Register</h1>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const Profile = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Profile</h1>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\nimport s from './Error404.module.css'\n\nfunction Error404() {\n    return (\n        <div className={s.errorBlock}>\n            <div className={s.number}>404</div>\n            <div className={s.message}>Page not found!</div>\n            <div className={s.cat}>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\r\n\r\nexport const RestorePassword = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Restore Password</h1>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const EnterPassword = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Enter Password</h1>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {ENTER_PASS_PATH, ERROR_404_PATH, LOGIN_PATH, PROFILE_PATH, REGISTER_PATH, RESTORE_PASS_PATH, TEST_PAGE_PATH } from \"../../../App\";\r\nimport styles from './Main.module.css';\r\n\r\nexport const Main = () => {\r\n\r\n    return (\r\n        <div>\r\n            <NavLink className={styles.navBlock} to={LOGIN_PATH}>Login</NavLink>\r\n            <NavLink className={styles.navBlock} to={REGISTER_PATH}>Register</NavLink>\r\n            <NavLink className={styles.navBlock} to={PROFILE_PATH}>Profile</NavLink>\r\n            <NavLink className={styles.navBlock} to={ERROR_404_PATH}>Error 404</NavLink>\r\n            <NavLink className={styles.navBlock} to={RESTORE_PASS_PATH}>Restore Password</NavLink>\r\n            <NavLink className={styles.navBlock} to={ENTER_PASS_PATH}>Enter Password</NavLink>\r\n            <NavLink className={styles.navBlock} to={TEST_PAGE_PATH}>Test Page</NavLink>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}`; // fixed - need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\n        onChange && onChange(e);\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <div>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n                id={\"supercheckbox\"}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            <label htmlFor={\"supercheckbox\"}>\n                {children && <span className={s.spanClassName}>{children}</span>}\n            </label>\n        </div>\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\nimport s from \"./SuperEditableSpan.module.css\";\nimport SuperInputText from \"../s1-SuperInputText/SuperInputText\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n\n    const onEnterCallback = () => {\n        setEditMode(false); // выключить editMode при нажатии Enter\n\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true); // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    const spanClassName = `${s.editableSpan} ${className}`;\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                        <img src={\"https://image.flaticon.com/icons/png/512/45/45706.png\"} width={\"20px\"}/>\n                    </span>\n\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\nimport './SuperSelect.css';\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: JSX.Element[] | undefined = options?.map((opt, i) =>\n        <option key={i}>{opt}</option>\n    ); // map options with key - done\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e);\n        onChangeOption && onChangeOption(e.currentTarget.value);\n        // onChange, onChangeOption - done\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    );\n}\n\nexport default SuperSelect;\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport './SuperRadio.css';\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        onChangeOption && onChangeOption(e.currentTarget.value);\n        // onChange, onChangeOption - done\n    }\n\n    const mappedOptions: JSX.Element[] = options ? options.map((o, i) => (\n        <div className=\"form_radio\" key={name + \"-\" + i} >\n            <input\n                id={\"hw7-radio\" + i}\n                className={\"radio\"}\n                type={\"radio\"}\n                name={name}\n                checked={i === 0}\n                value={o}\n                onChange={onChangeCallback}\n                // name, checked, value, onChange - done\n            />\n            <label htmlFor={\"hw7-radio\" + i}>\n                <span></span>{o}\n            </label>\n        </div>\n    )) : [];\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    );\n}\n\nexport default SuperRadio;\n","import React from \"react\";\r\nimport SuperInputText from \"../../components/super-components/s1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../components/super-components/s2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../components/super-components/s3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../../components/super-components/s4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../components/super-components/s5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../components/super-components/s6-SuperRadio/SuperRadio\";\r\n\r\nexport const TestPage = () => {\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <SuperInputText value={\"super input text\"}/>\r\n            </div>\r\n            <div>\r\n                <SuperButton>Super Button</SuperButton>\r\n            </div>\r\n            <div>\r\n                <SuperCheckbox/>\r\n            </div>\r\n            <div>\r\n                <SuperEditableSpan value={\"Super Editable Span\"}/>\r\n            </div>\r\n            <div>\r\n                <SuperSelect options={['value 1', 'value 2', 'value 3']}/>\r\n            </div>\r\n            <div>\r\n                <SuperRadio options={['value 1', 'value 2', 'value 3']}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {Route} from 'react-router-dom';\nimport {Login} from \"./n2-features/f1-auth/a1-login/Login\";\nimport {Register} from \"./n2-features/f1-auth/a2-register/Register\";\nimport {Profile} from \"./n2-features/f3-profile/Profile\";\nimport Error404 from \"./n2-features/f2-error404/Error404\";\nimport {RestorePassword} from \"./n2-features/f4-password/RestorePassword\";\nimport {EnterPassword} from \"./n2-features/f4-password/EnterPassword\";\nimport {Main} from \"./n1-main/m1-ui/Main/Main\";\nimport {TestPage} from \"./n2-features/f0-test/TestPage\";\n\nexport const LOGIN_PATH = \"/login\";\nexport const REGISTER_PATH = \"/register\";\nexport const PROFILE_PATH = \"/profile\";\nexport const ERROR_404_PATH = \"/404\";\nexport const RESTORE_PASS_PATH = \"/restore-pass\";\nexport const ENTER_PASS_PATH = \"/enter-pass\";\nexport const TEST_PAGE_PATH = \"/test\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            {/*//hr provider*/}\n            <Main/>\n            <div>\n                {/*<Header/>*/}\n                <Route path={LOGIN_PATH} render={() => <Login/>}/>\n                <Route path={REGISTER_PATH} render={() => <Register/>}/>\n                <Route path={PROFILE_PATH} render={() => <Profile/>}/>\n                <Route path={ERROR_404_PATH} render={() => <Error404/>}/>\n                <Route path={RESTORE_PASS_PATH} render={() => <RestorePassword/>}/>\n                <Route path={ENTER_PASS_PATH} render={() => <EnterPassword/>}/>\n                <Route path={TEST_PAGE_PATH} render={() => <TestPage/>}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionsType = {\r\n    type: \"\"\r\n}","const initialState = {\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionsType = {\r\n    type: \"\"\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    profile: profileReducer\r\n})\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport {store} from './state/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}